package ui;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import control.MaintainExaminationSystem;
import da.ExaminerTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tommy
 */
import domain.examiner;
import domain.payment;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JScrollPane;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import static ui.createExaminerResult.DATABASE_URL;
public class displayResult extends javax.swing.JPanel {
    private JFrame frame;

    /**
     * Creates new form createExaminer
     */
    private examiner examiner = new examiner();
    private String userPosition = "";
    private MaintainExaminationSystem maintainExamSys = new MaintainExaminationSystem();
    static final String DATABASE_URL = "jdbc:derby://localhost:1527/f:/examinationSystemDB;create=true";
    static final String USERNAME = "taruc";
    static final String PASSWORD = "taruc";
    
    private ExaminerTableModel tableModel;
    private TableRowSorter<TableModel> sorter;
    private JFrame frm = new JFrame();
    private String resultID = "";
    private String lastFiveDigitOfID = "";
    public displayResult(String userPosition, examiner examiner) {
        initComponents();
        lastFiveDigitOfID = String.valueOf(examiner.getexaminerID().charAt(5))+String.valueOf(examiner.getexaminerID().charAt(6))+String.valueOf(examiner.getexaminerID().charAt(7))+String.valueOf(examiner.getexaminerID().charAt(8))+String.valueOf(examiner.getexaminerID().charAt(9));
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        String currentDate = dateFormat.format(date);
        int currentMonth = Integer.parseInt(String.valueOf(currentDate.charAt(5))+String.valueOf(currentDate.charAt(6)));
        currentMonth = Integer.parseInt(String.valueOf(currentDate.charAt(5))+String.valueOf(currentDate.charAt(6)));
        resultID = "";
            if(currentMonth>=1&&currentMonth<=4){
                resultID = "APR"+lastFiveDigitOfID;
                //jComboBox1.setSelectedIndex(0);
            }
            else if(currentMonth>=5&&currentMonth<=8){
                resultID = "AUG"+lastFiveDigitOfID;
                //jComboBox1.setSelectedIndex(1);
            }
            else if(currentMonth>=9&&currentMonth<=12){
                resultID = "DEC"+lastFiveDigitOfID;
                //jComboBox1.setSelectedIndex(2);
            }
        int s=0;
        if(maintainExamSys.getExaminerResultByResultID(resultID).size()!=0){
            s = maintainExamSys.getExaminerResultByResultID(resultID).size()-1;
            displayGPA.setText(String.valueOf(maintainExamSys.getExaminerResultByResultID(resultID).get(s).getGPA()));
            displayCGPA.setText(String.valueOf(maintainExamSys.getExaminerResultByResultID(resultID).get(s).getCGPA()));
        }
        else{
            displayGPA.setText("0.0");
        displayCGPA.setText("0.0");
        }
        
        jbt_removeExaminer.setVisible(false);
        jbt_updateExaminer.setVisible(false);
        this.frame = frame;
        this.examiner = examiner;
        this.userPosition = userPosition;
        if(userPosition.equalsIgnoreCase("STAFF")){
            jbt_removeExaminer.setVisible(true);
        jbt_updateExaminer.setVisible(true);
        }
        frm = frame;
        
        drawTable();
    }
    public void drawTable(){
        try {
            String query = "SELECT \"subjectID\", \"grade\" FROM \"EXAMINER RESULT\" WHERE \"resultID\"='"+resultID+"'";
            tableModel = new ExaminerTableModel(DATABASE_URL, USERNAME, PASSWORD, query);
            jTable1.setModel(tableModel);
            sorter = new TableRowSorter<TableModel>(tableModel);
            jTable1.setRowSorter(sorter);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            tableModel.disconnectFromDatabase();
            System.exit(1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        createExaminerPanel_rightPanel = new javax.swing.JPanel();
        jbt_removeExaminer = new javax.swing.JButton();
        jbt_updateExaminer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        displayGPA = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        displayCGPA = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(0, 0, 0));

        createExaminerPanel_rightPanel.setBackground(new java.awt.Color(204, 255, 204));
        createExaminerPanel_rightPanel.setToolTipText("");

        jbt_removeExaminer.setBackground(new java.awt.Color(255, 204, 153));
        jbt_removeExaminer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbt_removeExaminer.setText("Remove");
        jbt_removeExaminer.setToolTipText("Click to remove record");
        jbt_removeExaminer.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jbt_removeExaminer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_removeExaminerActionPerformed(evt);
            }
        });

        jbt_updateExaminer.setBackground(new java.awt.Color(255, 204, 153));
        jbt_updateExaminer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbt_updateExaminer.setText("Update");
        jbt_updateExaminer.setToolTipText("Click to update record");
        jbt_updateExaminer.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jbt_updateExaminer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_updateExaminerActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(153, 255, 153));
        jLabel1.setToolTipText("Bonjour");

        jLabel2.setToolTipText("Bonjour");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("GPA: ");

        displayGPA.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayGPA.setText("none");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("CGPA: ");

        displayCGPA.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayCGPA.setText("none");

        jComboBox1.setBackground(new java.awt.Color(153, 153, 255));
        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "APR", "AUG", "DEC" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createExaminerPanel_rightPanelLayout = new javax.swing.GroupLayout(createExaminerPanel_rightPanel);
        createExaminerPanel_rightPanel.setLayout(createExaminerPanel_rightPanelLayout);
        createExaminerPanel_rightPanelLayout.setHorizontalGroup(
            createExaminerPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createExaminerPanel_rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createExaminerPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(createExaminerPanel_rightPanelLayout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 366, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(displayGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(displayCGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jbt_removeExaminer, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbt_updateExaminer, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(createExaminerPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        createExaminerPanel_rightPanelLayout.setVerticalGroup(
            createExaminerPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createExaminerPanel_rightPanelLayout.createSequentialGroup()
                .addGroup(createExaminerPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createExaminerPanel_rightPanelLayout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(createExaminerPanel_rightPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(createExaminerPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbt_removeExaminer, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbt_updateExaminer, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayCGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(createExaminerPanel_rightPanelLayout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createExaminerPanel_rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createExaminerPanel_rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbt_removeExaminerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_removeExaminerActionPerformed
        // TODO add your handling code here:
        int isConfirmed = 0;
        isConfirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to remove this result?", "REMOVE RECORD CONFIRMAITON", HEIGHT);
        if(isConfirmed==0){
            maintainExamSys.removeResult(resultID);
            searchExaminer examiner = new searchExaminer("");
            examiner.closeFrame(frame);
        }
        else{
            JOptionPane.showMessageDialog(null, "Remove record fail!", "REMOVE RECORD FAIL", HEIGHT);
        }
    }//GEN-LAST:event_jbt_removeExaminerActionPerformed

    
    private void jbt_updateExaminerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_updateExaminerActionPerformed
        // TODO add your handling code here:
        System.out.println("resultID: "+resultID);
        JFrame frm = new JFrame();
        frm.add(new updateExaminerResult(resultID, frm, examiner));
        frm.setTitle("STUDENT RESULT");
        frm.setSize(1366, 730);
        frm.setLocationRelativeTo(null);
        frm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frm.setVisible(true);
    }//GEN-LAST:event_jbt_updateExaminerActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String a = "";
        resultID = String.valueOf(jComboBox1.getSelectedItem()).toUpperCase()+lastFiveDigitOfID;
            try {
                if(maintainExamSys.getExaminerResultByResultID(resultID).isEmpty()==false){
                a = "SELECT \"subjectID\", \"grade\" FROM \"EXAMINER RESULT\" WHERE \"resultID\"='"+resultID+"'";
                tableModel.setQuery(a);
                int s = maintainExamSys.getExaminerResultByResultID(resultID).size()-1;
                displayGPA.setText(String.valueOf(maintainExamSys.getExaminerResultByResultID(resultID).get(s).getGPA()));
        displayCGPA.setText(String.valueOf(maintainExamSys.getExaminerResultByResultID(resultID).get(s).getCGPA()));
                }
                else
                    JOptionPane.showMessageDialog(null, "Record not found!!", "RECORD NOT FOUND", JOptionPane.ERROR_MESSAGE);
                
                
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);

            }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel createExaminerPanel_rightPanel;
    private javax.swing.JLabel displayCGPA;
    private javax.swing.JLabel displayGPA;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbt_removeExaminer;
    private javax.swing.JButton jbt_updateExaminer;
    // End of variables declaration//GEN-END:variables

private JScrollPane jpane = new JScrollPane(jTable1);

}

