package ui;

import domain.examiner;
import javax.swing.JOptionPane;
import control.MaintainExaminationSystem;
import da.ExaminerTableModel;
import domain.*;
import domain.payment;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tommy
 */
public class registerExam extends javax.swing.JPanel {

    /**
     * Creates new form createExaminer
     */
    static final String DATABASE_URL = "jdbc:derby://localhost:1527/f:/examinationSystemDB;create=true";
    static final String USERNAME = "taruc";
    static final String PASSWORD = "taruc";
    
    private ExaminerTableModel tableModel;
    private JTable resultTable;
    private TableRowSorter<TableModel> sorter;
    private JTextField filterText = new JTextField();
    
    private examiner examiner = new examiner();
    
    private int numberRegister = 0;
    
    private int sem1SubTotalCount = 0;
    private int sem2SubTotalCount = 0;
    private int sem3SubTotalCount = 0;
    
    
    
    private boolean isThisSubjectRegistered = false;
    
    public registerExam(examiner examiner, int numberRegister) {
        initComponents();
        this.numberRegister = numberRegister;
        this.examiner = examiner;
        drawTable();
    }
    
    public void drawTable(){
        String query  = "SELECT \"subjectID\", \"subjectName\" FROM SUBJECT WHERE \"courseID\"='"+maintainExamSys.getCourseIDByCourseName(examiner.getexaminerCourse())+"'";
        try {
            tableModel = new ExaminerTableModel(DATABASE_URL, USERNAME, PASSWORD, query);
            displayTable.setModel(tableModel);
            sorter = new TableRowSorter<TableModel>(tableModel);
            displayTable.setRowSorter(sorter);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            tableModel.disconnectFromDatabase();
            System.exit(1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        createStaffPanel_leftPanel = new javax.swing.JPanel();
        createStaffPanel_text_Create = new java.awt.Label();
        createStaffPanel_text_Record = new java.awt.Label();
        createStaffPanel_rightPanel = new javax.swing.JPanel();
        createStaffPanel_text_Name = new java.awt.Label();
        jbt_refresh = new javax.swing.JButton();
        jbt_createExaminer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 0, 0));

        createStaffPanel_leftPanel.setBackground(new java.awt.Color(204, 204, 255));
        createStaffPanel_leftPanel.setToolTipText("");

        createStaffPanel_text_Create.setFont(new java.awt.Font("FangSong", 3, 48)); // NOI18N
        createStaffPanel_text_Create.setText("Register");

        createStaffPanel_text_Record.setFont(new java.awt.Font("FangSong", 3, 48)); // NOI18N
        createStaffPanel_text_Record.setText("Examination");

        javax.swing.GroupLayout createStaffPanel_leftPanelLayout = new javax.swing.GroupLayout(createStaffPanel_leftPanel);
        createStaffPanel_leftPanel.setLayout(createStaffPanel_leftPanelLayout);
        createStaffPanel_leftPanelLayout.setHorizontalGroup(
            createStaffPanel_leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createStaffPanel_leftPanelLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(createStaffPanel_leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createStaffPanel_text_Create, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createStaffPanel_text_Record, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        createStaffPanel_leftPanelLayout.setVerticalGroup(
            createStaffPanel_leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createStaffPanel_leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createStaffPanel_text_Create, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createStaffPanel_text_Record, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        createStaffPanel_rightPanel.setBackground(new java.awt.Color(204, 255, 204));
        createStaffPanel_rightPanel.setToolTipText("");

        createStaffPanel_text_Name.setFont(new java.awt.Font("FangSong", 1, 18)); // NOI18N
        createStaffPanel_text_Name.setText("Please choose the subjet that you want to take in the final examination of this semester:");

        jbt_refresh.setBackground(new java.awt.Color(255, 204, 153));
        jbt_refresh.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbt_refresh.setText("Refresh");
        jbt_refresh.setToolTipText("Click to reset all fields");
        jbt_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jbt_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_refreshActionPerformed(evt);
            }
        });

        jbt_createExaminer.setBackground(new java.awt.Color(255, 204, 153));
        jbt_createExaminer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbt_createExaminer.setText("Confirm");
        jbt_createExaminer.setToolTipText("Click to create record");
        jbt_createExaminer.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jbt_createExaminer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_createExaminerActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(153, 255, 153));
        jLabel1.setToolTipText("Bonjour");

        jLabel2.setToolTipText("Bonjour");

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(displayTable);

        javax.swing.GroupLayout createStaffPanel_rightPanelLayout = new javax.swing.GroupLayout(createStaffPanel_rightPanel);
        createStaffPanel_rightPanel.setLayout(createStaffPanel_rightPanelLayout);
        createStaffPanel_rightPanelLayout.setHorizontalGroup(
            createStaffPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createStaffPanel_rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createStaffPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createStaffPanel_rightPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbt_createExaminer, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbt_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(createStaffPanel_rightPanelLayout.createSequentialGroup()
                        .addComponent(createStaffPanel_text_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 273, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        createStaffPanel_rightPanelLayout.setVerticalGroup(
            createStaffPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createStaffPanel_rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createStaffPanel_text_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(createStaffPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createStaffPanel_rightPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(createStaffPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(createStaffPanel_rightPanelLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(createStaffPanel_rightPanelLayout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(jLabel1)))
                        .addGap(207, 207, 207))
                    .addGroup(createStaffPanel_rightPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)))
                .addGroup(createStaffPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbt_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbt_createExaminer, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(createStaffPanel_leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createStaffPanel_rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createStaffPanel_leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(createStaffPanel_rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbt_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_refreshActionPerformed
        // TODO add your handling code here:
        drawTable();
    }//GEN-LAST:event_jbt_refreshActionPerformed

    private void jbt_createExaminerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_createExaminerActionPerformed
        // TODO add your handling code here:
        registeredSubject registeredSubject = null;
        subject selectedSubject = null;
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        String registerDate = dateFormat.format(date);
        double totalCost = 0;
        if(displayTable.getSelectedRows().length==0)
            JOptionPane.showMessageDialog(null, "No subject is selected! Select the subject that you want to register!!", "SELECTED SUBJECT NOT FOUND", JOptionPane.ERROR_MESSAGE);
        else if(displayTable.getSelectedRows().length>5)
            JOptionPane.showMessageDialog(null, "You can't registered more than 5 subject in one semester!!", "TOO MUCH REGSTERED SUBJECT", JOptionPane.ERROR_MESSAGE);
        else{
            numberRegister = 0;
            numberRegister = displayTable.getSelectedRows().length;
            int registermonth = Integer.parseInt(String.valueOf(registerDate.charAt(5))+String.valueOf(registerDate.charAt(6)));
            sem1SubTotalCount = 0;
            sem2SubTotalCount = 0;
            sem3SubTotalCount = 0;
            for(int i=0;i<maintainExamSys.getRegisteredSubjectListByExaminerID(examiner.getexaminerID()).size();i++){
                int registeredMonth = Integer.parseInt(String.valueOf(maintainExamSys.getRegisteredSubjectListByExaminerID(examiner.getexaminerID()).get(i).getRegisterDate().charAt(5))+String.valueOf(maintainExamSys.getRegisteredSubjectListByExaminerID(examiner.getexaminerID()).get(i).getRegisterDate().charAt(6)));
                if(registeredMonth>=1&&registeredMonth<=4)
                    sem1SubTotalCount++;
                else if(registeredMonth>=5&&registeredMonth<=8)
                    sem2SubTotalCount++;
                else if(registeredMonth>=9&&registeredMonth<=12)
                    sem1SubTotalCount++;
            }
            
            if(registermonth>=1&&registermonth<=4)
                numberRegister+=sem1SubTotalCount;
            else if(registermonth>=5&&registermonth<=8)
                numberRegister+=sem2SubTotalCount++;
            else if(registermonth>=9&&registermonth<=12)
                numberRegister+=sem1SubTotalCount++;
            
            
            if(numberRegister<=5){
            for(int i= 0;i<displayTable.getSelectedRows().length;i++){
            selectedSubject = maintainExamSys.getSelectedSubject(String.valueOf(displayTable.getValueAt(displayTable.getSelectedRows()[i], 0)));
                if(selectedSubject!=null){
                    if(maintainExamSys.getRegisteredSubjectListByExaminerID(examiner.getexaminerID()).isEmpty()==true){
                        isThisSubjectRegistered=false;
                    }
                    else{
                        boolean isEqual=false;
                        for(int j=0;j<maintainExamSys.getRegisteredSubjectListByExaminerID(examiner.getexaminerID()).size();j++){
                        isEqual = selectedSubject.getSubjectID().equalsIgnoreCase(maintainExamSys.getRegisteredSubjectListByExaminerID(examiner.getexaminerID()).get(j).getSubjectID());
                        System.out.println("isEqual: "+isEqual+" in "+j);
                        if(isEqual==false){
                           isThisSubjectRegistered=false;
                    }
                        else{
                            isThisSubjectRegistered=true;
                            j=100;
                        }
                    }
                    }
                    if(isThisSubjectRegistered==false){
                    setUpRegisterProcess(registeredSubject, registerDate, selectedSubject, totalCost);
                }
                    else{
                        JOptionPane.showMessageDialog(null, "You have registered this subject","SUBJECT REGISTERED",JOptionPane.ERROR_MESSAGE);
                    }
            }   
            else
                JOptionPane.showMessageDialog(null, "Record not found in database.","RECORD NOT FOUND", JOptionPane.ERROR_MESSAGE);
            }
            
        }
            else
                JOptionPane.showMessageDialog(null,"You can't choose more than 5 subject in one semester", "TOO MUCH SUBJECT", JOptionPane.ERROR_MESSAGE);
            
            
        }
        
    }//GEN-LAST:event_jbt_createExaminerActionPerformed

    public void createPayment(double totalCost){
        payment payment = new payment();
            payment.setExaminerID(examiner.getexaminerID());
            payment.setExaminerName(examiner.getexaminerName());
            payment.setPaymentCost(totalCost);
            payment.setPaymentDescription("Register examination");
            String paymentCode = "";
            int paymentListCount = 0;
            if(maintainExamSys.getPaymentList().isEmpty()==true)
                paymentListCount = 1;
            else
                paymentListCount = maintainExamSys.getPaymentList().size()+1;
            
            if(paymentListCount+1<10){
                paymentCode = "P00"+paymentListCount;
            }
            else if(paymentListCount+1<100){
                paymentCode = "P0"+paymentListCount;
            }
            else if(paymentListCount+1<1000){
                paymentCode = "P"+paymentListCount;
            }
            payment.setPaymentID(paymentCode);
            payment.setPaymentName("REGISTER EXAMINATION ");
            if(totalCost>0){
                maintainExamSys.createPayment(payment);
            }
            totalCost = 0;
}
  
    public void setUpRegisterProcess(registeredSubject registeredSubject, String registerDate, subject selectedSubject, double totalCost){
                registeredSubject = new registeredSubject(registerDate, selectedSubject.getSubjectName(), examiner.getexaminerID(), selectedSubject.getSubjectID(), examiner.getexaminerName());
                maintainExamSys.createRegisteredSubject(registeredSubject);
                totalCost=80;
                createPayment(totalCost);
    }
    public class JTextFieldLimit extends PlainDocument {
        private int limit;
        JTextFieldLimit(int limit) {
            super();
            this.limit = limit;
        }
        public void insertString( int offset, String  str, AttributeSet attr ) throws BadLocationException {
            if (str == null) return;
            
            if ((getLength() + str.length()) <= limit) {
                super.insertString(offset, str, attr);
            }
        }
    }


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel createStaffPanel_leftPanel;
    private javax.swing.JPanel createStaffPanel_rightPanel;
    private java.awt.Label createStaffPanel_text_Create;
    private java.awt.Label createStaffPanel_text_Name;
    private java.awt.Label createStaffPanel_text_Record;
    private javax.swing.JTable displayTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbt_createExaminer;
    private javax.swing.JButton jbt_refresh;
    // End of variables declaration//GEN-END:variables
    MaintainExaminationSystem maintainExamSys = new MaintainExaminationSystem();
}
