package ui;

import java.awt.event.*;
import domain.examiner;
import domain.examinerResult;
import javax.swing.JOptionPane;
import control.MaintainExaminationSystem;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import javax.swing.JFrame;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tommy
 */
public class editExaminerResult extends javax.swing.JPanel {

    /**
     * Creates new form createExaminer
     */
    private examiner examiner = new examiner();
    public editExaminerResult(examiner examiner, JFrame frm) {
        initComponents();
        this.examiner = examiner;
        ArrayList<String> registeredSubjectList = new ArrayList<String>();
        for(int i=0;i<maintainExamSys.getRegisteredSubjectListByExaminerID(examiner.getexaminerID()).size();i++){
            registeredSubjectList.add(maintainExamSys.getRegisteredSubjectListByExaminerID(examiner.getexaminerID()).get(i).getSubjectName());
        }
        registeredSubjectList.add("");
        String[] registeredSubjectListArr = new String[registeredSubjectList.size()];
        registeredSubjectListArr = registeredSubjectList.toArray(registeredSubjectListArr);
        jcb_subjectList.setModel(new javax.swing.DefaultComboBoxModel(registeredSubjectListArr));
        jcb_subjectList2.setModel(new javax.swing.DefaultComboBoxModel(registeredSubjectListArr));
        jcb_subjectList3.setModel(new javax.swing.DefaultComboBoxModel(registeredSubjectListArr));
        jcb_subjectList4.setModel(new javax.swing.DefaultComboBoxModel(registeredSubjectListArr));
        jcb_subjectList5.setModel(new javax.swing.DefaultComboBoxModel(registeredSubjectListArr));
        jtf_subjectMark.setDocument(new JTextFieldLimit(2));
        jtf_subjectMark2.setDocument(new JTextFieldLimit(2));
        jtf_subjectMark3.setDocument(new JTextFieldLimit(2));
        jtf_subjectMark4.setDocument(new JTextFieldLimit(2));
        jtf_subjectMark5.setDocument(new JTextFieldLimit(2));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        createResultPanel_leftPanel = new javax.swing.JPanel();
        createResultPanel_text_Create = new java.awt.Label();
        createResultPanel_text_Result = new java.awt.Label();
        createResultPanel_text_Examiner = new java.awt.Label();
        createResultPanel_rightPanel = new javax.swing.JPanel();
        jbt_resetField = new javax.swing.JButton();
        jbt_createExaminer = new javax.swing.JButton();
        jcb_subjectList = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtf_subjectMark = new javax.swing.JTextField();
        jcb_subjectList2 = new javax.swing.JComboBox<>();
        jcb_subjectList3 = new javax.swing.JComboBox<>();
        jcb_subjectList4 = new javax.swing.JComboBox<>();
        jcb_subjectList5 = new javax.swing.JComboBox<>();
        jtf_subjectMark2 = new javax.swing.JTextField();
        jtf_subjectMark3 = new javax.swing.JTextField();
        jtf_subjectMark4 = new javax.swing.JTextField();
        jtf_subjectMark5 = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 0, 0));

        createResultPanel_leftPanel.setBackground(new java.awt.Color(204, 204, 255));
        createResultPanel_leftPanel.setToolTipText("");

        createResultPanel_text_Create.setFont(new java.awt.Font("FangSong", 3, 48)); // NOI18N
        createResultPanel_text_Create.setText("Create");

        createResultPanel_text_Result.setFont(new java.awt.Font("FangSong", 3, 48)); // NOI18N
        createResultPanel_text_Result.setText("Result");

        createResultPanel_text_Examiner.setFont(new java.awt.Font("FangSong", 3, 48)); // NOI18N
        createResultPanel_text_Examiner.setText("Examiner");

        javax.swing.GroupLayout createResultPanel_leftPanelLayout = new javax.swing.GroupLayout(createResultPanel_leftPanel);
        createResultPanel_leftPanel.setLayout(createResultPanel_leftPanelLayout);
        createResultPanel_leftPanelLayout.setHorizontalGroup(
            createResultPanel_leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createResultPanel_leftPanelLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(createResultPanel_leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createResultPanel_text_Create, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createResultPanel_text_Examiner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createResultPanel_text_Result, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        createResultPanel_leftPanelLayout.setVerticalGroup(
            createResultPanel_leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createResultPanel_leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createResultPanel_text_Create, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createResultPanel_text_Examiner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createResultPanel_text_Result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        createResultPanel_rightPanel.setBackground(new java.awt.Color(204, 255, 204));
        createResultPanel_rightPanel.setToolTipText("");

        jbt_resetField.setBackground(new java.awt.Color(255, 204, 153));
        jbt_resetField.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbt_resetField.setText("Reset");
        jbt_resetField.setToolTipText("Click to reset all fields");
        jbt_resetField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jbt_resetField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_resetFieldActionPerformed(evt);
            }
        });

        jbt_createExaminer.setBackground(new java.awt.Color(255, 204, 153));
        jbt_createExaminer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbt_createExaminer.setText("Create");
        jbt_createExaminer.setToolTipText("Click to create record");
        jbt_createExaminer.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jbt_createExaminer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_createExaminerActionPerformed(evt);
            }
        });

        jcb_subjectList.setBackground(new java.awt.Color(153, 255, 153));
        jcb_subjectList.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcb_subjectList.setModel(jcb_subjectList.getModel());
        jcb_subjectList.setToolTipText("Choose subject");
        jcb_subjectList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_subjectListActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(153, 255, 153));
        jLabel1.setToolTipText("Bonjour");

        jLabel2.setToolTipText("Bonjour");

        jtf_subjectMark.setBackground(new java.awt.Color(204, 204, 255));
        jtf_subjectMark.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtf_subjectMark.setToolTipText("Enter subject mark");
        jtf_subjectMark.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_subjectMarkKeyTyped(evt);
            }
        });

        jcb_subjectList2.setBackground(new java.awt.Color(153, 255, 153));
        jcb_subjectList2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcb_subjectList2.setModel(jcb_subjectList2.getModel());
        jcb_subjectList2.setToolTipText("Choose subject");
        jcb_subjectList2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_subjectList2ActionPerformed(evt);
            }
        });

        jcb_subjectList3.setBackground(new java.awt.Color(153, 255, 153));
        jcb_subjectList3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcb_subjectList3.setModel(jcb_subjectList3.getModel());
        jcb_subjectList3.setToolTipText("Choose subject");
        jcb_subjectList3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_subjectList3ActionPerformed(evt);
            }
        });

        jcb_subjectList4.setBackground(new java.awt.Color(153, 255, 153));
        jcb_subjectList4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcb_subjectList4.setModel(jcb_subjectList4.getModel());
        jcb_subjectList4.setToolTipText("Choose subject");
        jcb_subjectList4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_subjectList4ActionPerformed(evt);
            }
        });

        jcb_subjectList5.setBackground(new java.awt.Color(153, 255, 153));
        jcb_subjectList5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcb_subjectList5.setModel(jcb_subjectList5.getModel());
        jcb_subjectList5.setToolTipText("Choose subject");
        jcb_subjectList5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_subjectList5ActionPerformed(evt);
            }
        });

        jtf_subjectMark2.setBackground(new java.awt.Color(204, 204, 255));
        jtf_subjectMark2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtf_subjectMark2.setToolTipText("Enter subject mark");
        jtf_subjectMark2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_subjectMark2KeyTyped(evt);
            }
        });

        jtf_subjectMark3.setBackground(new java.awt.Color(204, 204, 255));
        jtf_subjectMark3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtf_subjectMark3.setToolTipText("Enter subject mark");
        jtf_subjectMark3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_subjectMark3KeyTyped(evt);
            }
        });

        jtf_subjectMark4.setBackground(new java.awt.Color(204, 204, 255));
        jtf_subjectMark4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtf_subjectMark4.setToolTipText("Enter subject mark");
        jtf_subjectMark4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_subjectMark4KeyTyped(evt);
            }
        });

        jtf_subjectMark5.setBackground(new java.awt.Color(204, 204, 255));
        jtf_subjectMark5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtf_subjectMark5.setToolTipText("Enter subject mark");
        jtf_subjectMark5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_subjectMark5KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout createResultPanel_rightPanelLayout = new javax.swing.GroupLayout(createResultPanel_rightPanel);
        createResultPanel_rightPanel.setLayout(createResultPanel_rightPanelLayout);
        createResultPanel_rightPanelLayout.setHorizontalGroup(
            createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createResultPanel_rightPanelLayout.createSequentialGroup()
                .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createResultPanel_rightPanelLayout.createSequentialGroup()
                        .addGap(0, 766, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(createResultPanel_rightPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createResultPanel_rightPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jbt_createExaminer, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jbt_resetField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(createResultPanel_rightPanelLayout.createSequentialGroup()
                                .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jcb_subjectList5, 0, 353, Short.MAX_VALUE)
                                    .addComponent(jcb_subjectList4, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcb_subjectList3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcb_subjectList2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcb_subjectList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jtf_subjectMark, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jtf_subjectMark2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jtf_subjectMark3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jtf_subjectMark4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jtf_subjectMark5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        createResultPanel_rightPanelLayout.setVerticalGroup(
            createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createResultPanel_rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_subjectList, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_subjectMark, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_subjectList2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_subjectMark2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_subjectList3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_subjectMark3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_subjectList4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_subjectMark4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createResultPanel_rightPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(createResultPanel_rightPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcb_subjectList5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_subjectMark5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)
                        .addComponent(jLabel1)))
                .addGap(207, 207, 207)
                .addGroup(createResultPanel_rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbt_resetField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbt_createExaminer, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(createResultPanel_leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createResultPanel_rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createResultPanel_leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(createResultPanel_rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbt_resetFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_resetFieldActionPerformed
        // TODO add your handling code here:
        int isConfirmed = 0;
        
        isConfirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to clear all fields?", "CLEAR FIELD CONFIRMATION", HEIGHT);
        if(isConfirmed==0){
            jtf_subjectMark.setText("");
            jcb_subjectList.setSelectedIndex(0);
            jtf_subjectMark2.setText("");
            jcb_subjectList2.setSelectedIndex(0);
            jtf_subjectMark3.setText("");
            jcb_subjectList3.setSelectedIndex(0);
            jtf_subjectMark4.setText("");
            jcb_subjectList4.setSelectedIndex(0);
            jtf_subjectMark5.setText("");
            jcb_subjectList5.setSelectedIndex(0);
        }
        else{}
    }//GEN-LAST:event_jbt_resetFieldActionPerformed

    private void jbt_createExaminerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_createExaminerActionPerformed
        // TODO add your handling code here:
        String text = "";
        double cgpa = getCGPA();
        if((jtf_subjectMark.getText().isEmpty()==false)&&jtf_subjectMark2.getText().isEmpty()==false&&jtf_subjectMark3.getText().isEmpty()==false&&jtf_subjectMark4.getText().isEmpty()==false&&jtf_subjectMark5.getText().isEmpty()==false){
            //column 1
        if(String.valueOf(jcb_subjectList.getSelectedItem()).equalsIgnoreCase("")==false){
            examinerResult examinerResult = new examinerResult();
        setResultID(examinerResult);
        examinerResult.setExaminerName(examiner.getexaminerName());
        examinerResult.setExaminerID(examiner.getexaminerID());
        examinerResult.setSubjectID(maintainExamSys.getSubjectIDBySubjectName(String.valueOf(jcb_subjectList.getSelectedItem())));
        examinerResult.setGrade(getGrade(Integer.parseInt(jtf_subjectMark.getText())));
        examinerResult.setGPA(getGPA());
        examinerResult.setCGPA(cgpa);
        text= maintainExamSys.createExaminerResult(examinerResult);
        }   
        
        
        //column 2
        if(String.valueOf(jcb_subjectList2.getSelectedItem()).equalsIgnoreCase("")==false){
            examinerResult examinerResult2 = new examinerResult();
        setResultID(examinerResult2);
        examinerResult2.setExaminerName(examiner.getexaminerName());
        examinerResult2.setExaminerID(examiner.getexaminerID());
        examinerResult2.setSubjectID(maintainExamSys.getSubjectIDBySubjectName(String.valueOf(jcb_subjectList2.getSelectedItem())));
        examinerResult2.setGrade(getGrade(Integer.parseInt(jtf_subjectMark2.getText())));
        examinerResult2.setGPA(getGPA());
        examinerResult2.setCGPA(cgpa);
        text = maintainExamSys.createExaminerResult(examinerResult2);
        }
        
        
        //column 3
        if(String.valueOf(jcb_subjectList3.getSelectedItem()).equalsIgnoreCase("")==false){
            examinerResult examinerResult3 = new examinerResult();
        setResultID(examinerResult3);
        examinerResult3.setExaminerName(examiner.getexaminerName());
        examinerResult3.setExaminerID(examiner.getexaminerID());
        examinerResult3.setSubjectID(maintainExamSys.getSubjectIDBySubjectName(String.valueOf(jcb_subjectList3.getSelectedItem())));
        examinerResult3.setGrade(getGrade(Integer.parseInt(jtf_subjectMark3.getText())));
        examinerResult3.setGPA(getGPA());
        examinerResult3.setCGPA(cgpa);
        text = maintainExamSys.createExaminerResult(examinerResult3);
        }
        
        
        //column 4
        if(String.valueOf(jcb_subjectList4.getSelectedItem()).equalsIgnoreCase("")==false){
            examinerResult examinerResult4 = new examinerResult();
        setResultID(examinerResult4);
        examinerResult4.setExaminerName(examiner.getexaminerName());
        examinerResult4.setExaminerID(examiner.getexaminerID());
        examinerResult4.setSubjectID(maintainExamSys.getSubjectIDBySubjectName(String.valueOf(jcb_subjectList4.getSelectedItem())));
        examinerResult4.setGrade(getGrade(Integer.parseInt(jtf_subjectMark4.getText())));
        examinerResult4.setGPA(getGPA());
        examinerResult4.setCGPA(cgpa);
        text = maintainExamSys.createExaminerResult(examinerResult4);
        }
        
        
        //column 5
        if(String.valueOf(jcb_subjectList5.getSelectedItem()).equalsIgnoreCase("")==false){
            examinerResult examinerResult5 = new examinerResult();
        setResultID(examinerResult5);
        examinerResult5.setExaminerName(examiner.getexaminerName());
        examinerResult5.setExaminerID(examiner.getexaminerID());
        examinerResult5.setSubjectID(maintainExamSys.getSubjectIDBySubjectName(String.valueOf(jcb_subjectList5.getSelectedItem())));
        examinerResult5.setGrade(getGrade(Integer.parseInt(jtf_subjectMark5.getText())));
        examinerResult5.setGPA(getGPA());
        examinerResult5.setCGPA(cgpa);
        text = maintainExamSys.createExaminerResult(examinerResult5);
        }
        
        
        if(text.equalsIgnoreCase("PASS"))
            JOptionPane.showMessageDialog(null, "Create result success!", "REGISTER SUBJECT SUCCESS", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(null,"Those field should not be empty", "EMPTY FIELD FOUND", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbt_createExaminerActionPerformed

    public char getGrade(int mark){
        char grade = 0;
        if(mark>=80)
            grade = 'A';
        else if(mark>=65&&mark<80)
            grade = 'B';
        else if(mark>=50&&mark<65)
            grade = 'C';
        else if(mark<50)
            grade = 'F';
        return grade;
    }
    
    public double getGPA(){
        double gpa = 0;
        if(String.valueOf(jcb_subjectList.getSelectedItem()).equalsIgnoreCase("")==false)
            gpa+=(Integer.parseInt(jtf_subjectMark.getText())*0.008);
        else
            gpa+=(100*0.008);
        if(String.valueOf(jcb_subjectList2.getSelectedItem()).equalsIgnoreCase("")==false)
            gpa+=(Integer.parseInt(jtf_subjectMark2.getText())*0.008);
        else
            gpa+=(100*0.008);
        if(String.valueOf(jcb_subjectList3.getSelectedItem()).equalsIgnoreCase("")==false)
            gpa+=(Integer.parseInt(jtf_subjectMark3.getText())*0.008);
        else
            gpa+=(100*0.008);
        if(String.valueOf(jcb_subjectList4.getSelectedItem()).equalsIgnoreCase("")==false)
            gpa+=(Integer.parseInt(jtf_subjectMark4.getText())*0.008);
        else
            gpa+=(100*0.008);
        if(String.valueOf(jcb_subjectList5.getSelectedItem()).equalsIgnoreCase("")==false)
            gpa+=(Integer.parseInt(jtf_subjectMark5.getText())*0.008);
        else
            gpa+=(100*0.008);
        return gpa;
    }
    
    public double getCGPA(){
        double cgpa = 0;
        if(maintainExamSys.getExaminerResultByExaminerID(examiner.getexaminerID()).isEmpty())
            cgpa = getGPA();
        else{
            int totalSemesterCount = maintainExamSys.getExaminerResultByExaminerID(examiner.getexaminerID()).size()/5;
            double previousCGPA = maintainExamSys.getExaminerResultByExaminerID(examiner.getexaminerID()).get(totalSemesterCount).getGPA();
            cgpa = (previousCGPA+getGPA())/(totalSemesterCount+1);
        }
        return cgpa;
    }
    public void setResultID(examinerResult examinerResult){
        //check current semester
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        String currentDate = dateFormat.format(date);
        int currentMonth = Integer.parseInt(String.valueOf(currentDate.charAt(5))+String.valueOf(currentDate.charAt(6)));
        String lastFiveDigitOfID = String.valueOf(examiner.getexaminerID().charAt(5))+String.valueOf(examiner.getexaminerID().charAt(6))+String.valueOf(examiner.getexaminerID().charAt(7))+String.valueOf(examiner.getexaminerID().charAt(8))+String.valueOf(examiner.getexaminerID().charAt(9));
        currentMonth = Integer.parseInt(String.valueOf(currentDate.charAt(5))+String.valueOf(currentDate.charAt(6)));
            if(currentMonth>=1&&currentMonth<=4){
                examinerResult.setResultID("APR"+lastFiveDigitOfID);
            }
            else if(currentMonth>=5&&currentMonth<=8){
                examinerResult.setResultID("AUG"+lastFiveDigitOfID);
            }
            else if(currentMonth>=9&&currentMonth<=12){
                examinerResult.setResultID("DEC"+lastFiveDigitOfID);
            }
         System.out.println("examinerResult: "+examinerResult);
    }
  
    private void jtf_subjectMarkKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_subjectMarkKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
       if(!(Character.isDigit(c) || c==KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE)){
           evt.consume();
           java.awt.Toolkit.getDefaultToolkit().beep();
       }
    }//GEN-LAST:event_jtf_subjectMarkKeyTyped

    private void jtf_subjectMark2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_subjectMark2KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
       if(!(Character.isDigit(c) || c==KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE)){
           evt.consume();
           java.awt.Toolkit.getDefaultToolkit().beep();
       }
    }//GEN-LAST:event_jtf_subjectMark2KeyTyped

    private void jtf_subjectMark3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_subjectMark3KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
       if(!(Character.isDigit(c) || c==KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE)){
           evt.consume();
           java.awt.Toolkit.getDefaultToolkit().beep();
       }
    }//GEN-LAST:event_jtf_subjectMark3KeyTyped

    private void jtf_subjectMark4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_subjectMark4KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
       if(!(Character.isDigit(c) || c==KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE)){
           evt.consume();
           java.awt.Toolkit.getDefaultToolkit().beep();
       }
    }//GEN-LAST:event_jtf_subjectMark4KeyTyped

    private void jtf_subjectMark5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_subjectMark5KeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
       if(!(Character.isDigit(c) || c==KeyEvent.VK_BACK_SPACE || c==KeyEvent.VK_DELETE)){
           evt.consume();
           java.awt.Toolkit.getDefaultToolkit().beep();
       }
    }//GEN-LAST:event_jtf_subjectMark5KeyTyped

    private void jcb_subjectListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_subjectListActionPerformed
        // TODO add your handling code here:
        if(String.valueOf(jcb_subjectList.getSelectedItem()).equalsIgnoreCase("")){
            jtf_subjectMark.setText("0");
            jtf_subjectMark.setEditable(false);
            
        }
        else
            jtf_subjectMark.setEditable(true);
    }//GEN-LAST:event_jcb_subjectListActionPerformed

    private void jcb_subjectList2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_subjectList2ActionPerformed
        // TODO add your handling code here:
        if(String.valueOf(jcb_subjectList2.getSelectedItem()).equalsIgnoreCase("")){
            jtf_subjectMark2.setText("0");
            jtf_subjectMark2.setEditable(false);
            
        }
        else
            jtf_subjectMark2.setEditable(true);
    }//GEN-LAST:event_jcb_subjectList2ActionPerformed

    private void jcb_subjectList3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_subjectList3ActionPerformed
        // TODO add your handling code here:
        if(String.valueOf(jcb_subjectList3.getSelectedItem()).equalsIgnoreCase("")){
            jtf_subjectMark3.setText("0");
            jtf_subjectMark3.setEditable(false);
            
        }
        else
            jtf_subjectMark3.setEditable(true);
    }//GEN-LAST:event_jcb_subjectList3ActionPerformed

    private void jcb_subjectList4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_subjectList4ActionPerformed
        // TODO add your handling code here:
        if(String.valueOf(jcb_subjectList4.getSelectedItem()).equalsIgnoreCase("")){
            jtf_subjectMark4.setText("0");
            jtf_subjectMark4.setEditable(false);
            
        }
        else
            jtf_subjectMark4.setEditable(true);
    }//GEN-LAST:event_jcb_subjectList4ActionPerformed

    private void jcb_subjectList5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_subjectList5ActionPerformed
        // TODO add your handling code here:
        if(String.valueOf(jcb_subjectList5.getSelectedItem()).equalsIgnoreCase("")){
            jtf_subjectMark5.setText("0");
            jtf_subjectMark5.setEditable(false);
            
        }
        else
            jtf_subjectMark5.setEditable(true);
    }//GEN-LAST:event_jcb_subjectList5ActionPerformed

    public class JTextFieldLimit extends PlainDocument {
        private int limit;
        JTextFieldLimit(int limit) {
            super();
            this.limit = limit;
        }
        public void insertString( int offset, String  str, AttributeSet attr ) throws BadLocationException {
            if (str == null) return;
            
            if ((getLength() + str.length()) <= limit) {
                super.insertString(offset, str, attr);
            }
        }
    }


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel createResultPanel_leftPanel;
    private javax.swing.JPanel createResultPanel_rightPanel;
    private java.awt.Label createResultPanel_text_Create;
    private java.awt.Label createResultPanel_text_Examiner;
    private java.awt.Label createResultPanel_text_Result;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbt_createExaminer;
    private javax.swing.JButton jbt_resetField;
    private javax.swing.JComboBox<String> jcb_subjectList;
    private javax.swing.JComboBox<String> jcb_subjectList2;
    private javax.swing.JComboBox<String> jcb_subjectList3;
    private javax.swing.JComboBox<String> jcb_subjectList4;
    private javax.swing.JComboBox<String> jcb_subjectList5;
    private javax.swing.JTextField jtf_subjectMark;
    private javax.swing.JTextField jtf_subjectMark2;
    private javax.swing.JTextField jtf_subjectMark3;
    private javax.swing.JTextField jtf_subjectMark4;
    private javax.swing.JTextField jtf_subjectMark5;
    // End of variables declaration//GEN-END:variables
    MaintainExaminationSystem maintainExamSys = new MaintainExaminationSystem();
}
